name: CI

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        os: [windows-2019, macOS-10.14, ubuntu-18.04]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: rustup-init (Windows)
      run: |
        curl -sSf --tlsv1.2 --proto =https -o ./rustup-init.exe https://win.rustup.rs/x86_64
        .\rustup-init.exe -y --no-modify-path --default-toolchain stable
        %HOME\.cargo\bin\rustup.exe component add clippy rustfmt
      if: matrix.os == 'windows-2019'
    - name: rustup-init (Unix)
      run: |
        curl -sSf --tlsv1.2 --proto '=https' -o ./rustup-init https://sh.rustup.rs
        bash ./rustup-init -y --no-modify-path --default-toolchain stable
        ~/.cargo/bin/rustup component add clippy rustfmt
      if: matrix.os != 'windows-2019'
    - name: cargo fmt -- --check
      run: |
        PATH="$HOME/.cargo/bin:$PATH"
        cargo fmt --all -- --check
      shell: bash
    - name: cargo clippy
      run: |
        PATH="$HOME/.cargo/bin:$PATH"
        cargo clippy --all --all-targets -- -D warnings
      shell: bash
    - name: cargo test
      run: |
        PATH="$HOME/.cargo/bin:$PATH"
        cargo test --all --all-targets
      shell: bash
    - name: cargo run
      run: |
        PATH="$HOME/.cargo/bin:$PATH"
        cargo run -- linked --debug | jq > /dev/null
      shell: bash
