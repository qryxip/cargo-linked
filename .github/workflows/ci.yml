name: CI

on:
  schedule:
    - cron: '0 0 * * 0'
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        rust_channel:
          - stable
        os:
          - windows-2019
          - macOS-10.14
          - ubuntu-18.04
        include:
          # https://internals.rust-lang.org/t/demote-windows-mingw-targets-to-lower-tiers-or-re-enable-their-tests/10536
          - rust_channel: stable
            os: windows-2019
            rust_triple: x86_64-pc-windows-msvc
          - rust_channel: stable
            os: macOS-10.14
            rust_triple: x86_64-apple-darwin
          - rust_channel: stable
            os: ubuntu-18.04
            rust_triple: x86_64-unknown-linux-gnu

    name: ${{ matrix.rust_channel }}-${{ matrix.rust_triple }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v1

      - name: rustup-init
        run: |
          curl -sSf --tlsv1.2 --proto '=https' -o /tmp/rustup-init https://sh.rustup.rs
          bash /tmp/rustup-init -y --no-modify-path
          ~/.cargo/bin/rustup update
          ~/.cargo/bin/rustup component add clippy rustfmt
          echo 'export PATH="$HOME/.cargo/bin:$HOME/go/bin:$PATH"' > /tmp/rc.bash
        shell: bash

      - name: Display versions
        run: |
          source /tmp/rc.bash
          rustup show
          echo -e '\n'
          rustc -Vv
          echo -e '\n'
          cargo -Vv
          echo -e '\n'
          cargo clippy -V
          echo -e '\n'
          rustfmt -V
          echo -e '\n'
          bash --version
        shell: bash

      - name: cargo fmt -- --check
        run: |
          source /tmp/rc.bash
          cargo fmt --all -- --check
        shell: bash

      - name: cargo clippy
        run: |
          source /tmp/rc.bash
          # A hack to avoid IRC
          cargo check --all --all-targets --all-features
          if ${{ matrix.os == 'windows-2019' }}; then
            TO_UNIX_PATHS='xargs cygpath -u'
          else
            TO_UNIX_PATHS=cat
          fi
          cargo metadata --format-version 1 |
            jq -r '.workspace_members[] as $members | .packages[] | select(.id == $members) | .targets[].src_path' |
            $TO_UNIX_PATHS |
            xargs touch
          cargo clippy --all --all-targets --all-features -- -D warnings
        shell: bash

      - name: cargo build
        run: |
          source /tmp/rc.bash
          cargo build --all --bins --examples --all-features
          cargo build --all --all-targets --all-features
        shell: bash

      - name: cargo test
        run: |
          source /tmp/rc.bash
          cargo test --all --all-targets --all-features
        shell: bash

      - name: Run
        run: |
          source /tmp/rc.bash
          cargo run --all-features -- linked --debug | jq .
        shell: bash

      - name: Upload to GitHub Releases
        run: |
          source /tmp/rc.bash
          if ${{ contains(matrix.rust_triple, 'pc-windows') }}; then
            EXE=.exe
          fi
          RELEASE_TARGET="./target/release/${GITHUB_REPOSITORY#*/}$EXE"
          ASSET_STEM="${GITHUB_REPOSITORY#*/}-${GITHUB_REF#refs/tags/}-${{ matrix.rust_triple }}"
          go get github.com/tcnksm/ghr
          cargo build --release --all-features
          git archive -o "./$ASSET_STEM.tar" --prefix "$ASSET_STEM/" HEAD
          tar -xf "./$ASSET_STEM.tar"
          mv "$RELEASE_TARGET" "./$ASSET_STEM/"
          if ${{ contains(matrix.rust_triple, 'pc-windows') }}; then
            ASSET="./$ASSET_STEM.zip"
            7z a "$ASSET" "./$ASSET_STEM"
            zipinfo "$ASSET"
          else
            ASSET="./$ASSET_STEM.tar.gz"
            tar -czvf "$ASSET" "./$ASSET_STEM"
          fi
          ghr "${GITHUB_REF#refs/tags/}" "$ASSET"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        if: startsWith(github.ref, 'refs/tags/')

  publish:
    name: cargo pubish
    runs-on: ubuntu-18.04
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v1

      - name: cargo publish
        run: |
          curl -sSf --tlsv1.2 --proto '=https' -o /tmp/rustup-init https://sh.rustup.rs
          bash /tmp/rustup-init -y --no-modify-path
          ~/.cargo/bin/rustup update
          ~/.cargo/bin/cargo publish --all-features --verbose --token "$CRATES_IO_TOKEN"
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
